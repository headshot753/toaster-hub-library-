-- Toaster Hub Library (Adjusted Textbox Size and Window Size)

local Library = {
    Theme = {
        PrimaryColor = Color3.fromRGB(30, 30, 30),
        SecondaryColor = Color3.fromRGB(50, 50, 50),
        BorderColor = Color3.fromRGB(0, 255, 0),
        TabColor = Color3.fromRGB(40, 40, 40),
        TextColor = Color3.fromRGB(255, 255, 255),
        ButtonColor = Color3.fromRGB(255, 0, 0),
        Font = Enum.Font.SourceSans,
        TextSize = 14,
        BoldFont = Enum.Font.SourceSansBold,
        BoldTextSize = 18,
    },
    Version = "2.3"
}

-- Debug print to confirm library version
print("Toaster Hub Library Version " .. Library.Version .. " loaded")

-- Services
local UserInputService = game:GetService("UserInputService")

-- Window Creation
function Library:CreateWindow(name, size, position)
    local Window = {}
    Window.Tabs = {}
    Window.Size = size or UDim2.new(0, 500, 0, 350) -- Increased window size for better layout
    Window.Position = position or UDim2.new(0.5, -250, 0.5, -175) -- Adjusted position to center the larger window

    -- ScreenGui
    Window.ScreenGui = Instance.new("ScreenGui")
    Window.ScreenGui.Name = name .. "Gui"
    Window.ScreenGui.Parent = game.Players.LocalPlayer.PlayerGui
    Window.ScreenGui.ResetOnSpawn = false
    Window.ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

    -- Main Frame
    Window.MainFrame = Instance.new("Frame")
    Window.MainFrame.Size = Window.Size
    Window.MainFrame.Position = Window.Position
    Window.MainFrame.BackgroundColor3 = Library.Theme.PrimaryColor
    Window.MainFrame.BorderColor3 = Library.Theme.BorderColor
    Window.MainFrame.Parent = Window.ScreenGui

    -- Title Bar
    Window.TitleBar = Instance.new("Frame")
    Window.TitleBar.Size = UDim2.new(1, 0, 0, 30)
    Window.TitleBar.BackgroundColor3 = Library.Theme.SecondaryColor
    Window.TitleBar.BorderSizePixel = 0
    Window.TitleBar.Parent = Window.MainFrame

    Window.TitleLabel = Instance.new("TextLabel")
    Window.TitleLabel.Size = UDim2.new(1, -60, 1, 0)
    Window.TitleLabel.Position = UDim2.new(0, 0, 0, 0)
    Window.TitleLabel.BackgroundTransparency = 1
    Window.TitleLabel.Text = name
    Window.TitleLabel.TextColor3 = Library.Theme.TextColor
    Window.TitleLabel.Font = Library.Theme.BoldFont
    Window.TitleLabel.TextSize = Library.Theme.BoldTextSize
    Window.TitleLabel.Parent = Window.TitleBar

    -- Minimize Button
    Window.MinimizeButton = Instance.new("TextButton")
    Window.MinimizeButton.Size = UDim2.new(0, 30, 0, 30)
    Window.MinimizeButton.Position = UDim2.new(1, -60, 0, 0)
    Window.MinimizeButton.BackgroundColor3 = Library.Theme.ButtonColor
    Window.MinimizeButton.Text = "-"
    Window.MinimizeButton.TextColor3 = Library.Theme.TextColor
    Window.MinimizeButton.Font = Library.Theme.BoldFont
    Window.MinimizeButton.TextSize = Library.Theme.BoldTextSize
    Window.MinimizeButton.Parent = Window.TitleBar

    -- Close Button
    Window.CloseButton = Instance.new("TextButton")
    Window.CloseButton.Size = UDim2.new(0, 30, 0, 30)
    Window.CloseButton.Position = UDim2.new(1, -30, 0, 0)
    Window.CloseButton.BackgroundColor3 = Library.Theme.ButtonColor
    Window.CloseButton.Text = "X"
    Window.CloseButton.TextColor3 = Library.Theme.TextColor
    Window.CloseButton.Font = Library.Theme.BoldFont
    Window.CloseButton.TextSize = Library.Theme.BoldTextSize
    Window.CloseButton.Parent = Window.TitleBar

    -- Tab Bar
    Window.TabBar = Instance.new("Frame")
    Window.TabBar.Size = UDim2.new(1, 0, 0, 30)
    Window.TabBar.Position = UDim2.new(0, 0, 0, 30)
    Window.TabBar.BackgroundColor3 = Library.Theme.TabColor
    Window.TabBar.BorderSizePixel = 0
    Window.TabBar.Parent = Window.MainFrame

    local tabBarLayout = Instance.new("UIListLayout")
    tabBarLayout.FillDirection = Enum.FillDirection.Horizontal
    tabBarLayout.SortOrder = Enum.SortOrder.LayoutOrder
    tabBarLayout.Parent = Window.TabBar

    -- Dragging Logic
    local dragging, dragStart, startPos
    Window.TitleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = Window.MainFrame.Position
        end
    end)
    UserInputService.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            local delta = input.Position - dragStart
            Window.MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
    UserInputService.InputEnded:Connect(function()
        if dragging then
            dragging = false
        end
    end)

    -- Minimize Logic
    Window.MinimizeButton.MouseButton1Click:Connect(function()
        Window.MainFrame.Visible = false
        local restoreButton = Instance.new("TextButton")
        restoreButton.Size = UDim2.new(0, 120, 0, 30)
        restoreButton.Position = UDim2.new(0.5, -60, 0, 10)
        restoreButton.BackgroundColor3 = Library.Theme.PrimaryColor
        restoreButton.BorderColor3 = Library.Theme.BorderColor
        restoreButton.Text = "ðŸ”¼ Restore GUI"
        restoreButton.TextColor3 = Library.Theme.TextColor
        restoreButton.Font = Library.Theme.BoldFont
        restoreButton.TextSize = 16
        restoreButton.ZIndex = 99
        restoreButton.Parent = Window.ScreenGui

        restoreButton.MouseButton1Click:Connect(function()
            Window.MainFrame.Visible = true
            restoreButton:Destroy()
        end)
    end)

    -- Close Logic
    Window.CloseButton.MouseButton1Click:Connect(function()
        Window.ScreenGui:Destroy()
    end)

    -- Add Tab Function
    function Window:AddTab(name)
        local Tab = {}
        Tab.Name = name
        Tab.Elements = {}

        -- Tab Button
        Tab.Button = Instance.new("TextButton")
        Tab.Button.Size = UDim2.new(0, 80, 1, 0)
        Tab.Button.BackgroundColor3 = Library.Theme.TabColor
        Tab.Button.Text = name
        Tab.Button.TextColor3 = Library.Theme.TextColor
        Tab.Button.Font = Library.Theme.Font
        Tab.Button.TextSize = Library.Theme.TextSize
        Tab.Button.Parent = Window.TabBar

        -- Tab Frame
        Tab.Frame = Instance.new("Frame")
        Tab.Frame.Size = UDim2.new(1, 0, 1, -60)
        Tab.Frame.Position = UDim2.new(0, 0, 0, 60)
        Tab.Frame.BackgroundColor3 = Library.Theme.PrimaryColor
        Tab.Frame.BorderSizePixel = 0
        Tab.Frame.Visible = (#Window.Tabs == 0)
        Tab.Frame.Parent = Window.MainFrame

        -- Scrolling Frame for Tab Content
        Tab.ScrollingFrame = Instance.new("ScrollingFrame")
        Tab.ScrollingFrame.Size = UDim2.new(1, 0, 1, 0)
        Tab.ScrollingFrame.Position = UDim2.new(0, 0, 0, 0)
        Tab.ScrollingFrame.BackgroundTransparency = 1
        Tab.ScrollingFrame.ScrollBarThickness = 5
        Tab.ScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0) -- Will be updated dynamically
        Tab.ScrollingFrame.Parent = Tab.Frame

        local tabLayout = Instance.new("UIListLayout")
        tabLayout.SortOrder = Enum.SortOrder.LayoutOrder
        tabLayout.Padding = UDim.new(0, 8) -- Default padding
        tabLayout.Parent = Tab.ScrollingFrame

        -- Update CanvasSize when elements are added
        tabLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
            Tab.ScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, tabLayout.AbsoluteContentSize.Y)
        end)

        -- Tab Switching
        Tab.Button.MouseButton1Click:Connect(function()
            for _, tab in pairs(Window.Tabs) do
                tab.Frame.Visible = false
            end
            Tab.Frame.Visible = true
        end)

        -- Add Element Function
        function Tab:AddLabel(text)
            local Label = Instance.new("TextLabel")
            Label.Size = UDim2.new(0, 100, 0, 30)
            Label.BackgroundTransparency = 1
            Label.Text = text
            Label.TextColor3 = Library.Theme.TextColor
            Label.Font = Library.Theme.Font
            Label.TextSize = Library.Theme.TextSize
            Label.Parent = Tab.ScrollingFrame
            table.insert(Tab.Elements, Label)
            return Label
        end

        function Tab:AddButton(text, callback)
            local Button = Instance.new("TextButton")
            Button.Size = UDim2.new(0, 100, 0, 35) -- Adjusted to match textbox height
            Button.BackgroundColor3 = Library.Theme.SecondaryColor
            Button.Text = text
            Button.TextColor3 = Library.Theme.TextColor
            Button.Font = Library.Theme.Font
            Button.TextSize = Library.Theme.TextSize
            Button.Parent = Tab.ScrollingFrame
            Button.MouseButton1Click:Connect(callback)
            table.insert(Tab.Elements, Button)
            return Button
        end

        function Tab:AddToggle(text, default, callback)
            local Toggle = Instance.new("TextButton")
            Toggle.Size = UDim2.new(0, 100, 0, 35) -- Adjusted to match textbox height
            Toggle.BackgroundColor3 = Library.Theme.SecondaryColor
            Toggle.Text = default and (text .. ": On") or (text .. ": Off")
            Toggle.TextColor3 = Library.Theme.TextColor
            Toggle.Font = Library.Theme.Font
            Toggle.TextSize = Library.Theme.TextSize
            Toggle.Parent = Tab.ScrollingFrame

            local state = default
            Toggle.MouseButton1Click:Connect(function()
                state = not state
                Toggle.Text = state and (text .. ": On") or (text .. ": Off")
                callback(state)
            end)
            table.insert(Tab.Elements, Toggle)
            return Toggle
        end

        function Tab:AddTextbox(text, default, callback)
            local Label = Instance.new("TextLabel")
            Label.Size = UDim2.new(0, 280, 0, 35) -- Adjusted to fit new textbox size
            Label.BackgroundTransparency = 1
            Label.Text = text
            Label.TextColor3 = Library.Theme.TextColor
            Label.Font = Library.Theme.Font
            Label.TextSize = Library.Theme.TextSize
            Label.ClipsDescendants = true
            Label.Visible = true
            Label.ZIndex = 5
            Label.Parent = Tab.ScrollingFrame

            local Textbox = Instance.new("TextBox")
            Textbox.Size = UDim2.new(0, 180, 0, 35) -- Adjusted size for better usability
            Textbox.Position = UDim2.new(0, 90, 0, 0)
            Textbox.BackgroundColor3 = Library.Theme.SecondaryColor
            Textbox.Text = default or ""
            Textbox.TextColor3 = Library.Theme.TextColor
            Textbox.Font = Library.Theme.Font
            Textbox.TextSize = 16 -- Adjusted text size for readability
            Textbox.TextWrapped = true
            Textbox.Visible = true
            Textbox.ZIndex = 5
            Textbox.Parent = Label

            -- Safety check to prevent disappearing
            Textbox:GetPropertyChangedSignal("Visible"):Connect(function()
                if not Textbox.Visible then
                    Textbox.Visible = true
                end
            end)
            Label:GetPropertyChangedSignal("Visible"):Connect(function()
                if not Label.Visible then
                    Label.Visible = true
                end
            end)

            Textbox.FocusLost:Connect(function()
                callback(Textbox.Text)
            end)
            table.insert(Tab.Elements, Label)
            return Textbox
        end

        function Tab:AddDropdown(text, options, default, callback)
            local Label = Instance.new("TextLabel")
            Label.Size = UDim2.new(0, 280, 0, 35) -- Adjusted to match textbox container size
            Label.BackgroundTransparency = 1
            Label.Text = text
            Label.TextColor3 = Library.Theme.TextColor
            Label.Font = Library.Theme.Font
            Label.TextSize = Library.Theme.TextSize
            Label.ZIndex = 5
            Label.Parent = Tab.ScrollingFrame

            local Dropdown = Instance.new("TextButton")
            Dropdown.Size = UDim2.new(0, 100, 0, 30)
            Dropdown.Position = UDim2.new(0, 90, 0, 0)
            Dropdown.BackgroundColor3 = Library.Theme.SecondaryColor
            Dropdown.Text = default
            Dropdown.TextColor3 = Library.Theme.TextColor
            Dropdown.Font = Library.Theme.Font
            Dropdown.TextSize = Library.Theme.TextSize
            Dropdown.ZIndex = 5
            Dropdown.Parent = Label

            local DropdownFrame = Instance.new("ScrollingFrame")
            DropdownFrame.Size = UDim2.new(0, 100, 0, 120)
            DropdownFrame.Position = UDim2.new(0, 90, 0, 30)
            DropdownFrame.BackgroundColor3 = Library.Theme.SecondaryColor
            DropdownFrame.Visible = false
            DropdownFrame.CanvasSize = UDim2.new(0, 0, 0, #options * 30)
            DropdownFrame.ScrollBarThickness = 5
            DropdownFrame.ZIndex = 10
            DropdownFrame.Parent = Label

            local dropdownLayout = Instance.new("UIListLayout")
            dropdownLayout.SortOrder = Enum.SortOrder.LayoutOrder
            dropdownLayout.Parent = DropdownFrame

            for i, option in ipairs(options) do
                local OptionButton = Instance.new("TextButton")
                OptionButton.Size = UDim2.new(1, 0, 0, 30)
                OptionButton.BackgroundTransparency = 1
                OptionButton.Text = option
                OptionButton.TextColor3 = Library.Theme.TextColor
                OptionButton.Font = Library.Theme.Font
                OptionButton.TextSize = Library.Theme.TextSize
                OptionButton.ZIndex = 10
                OptionButton.Parent = DropdownFrame

                OptionButton.MouseButton1Click:Connect(function()
                    Dropdown.Text = option
                    DropdownFrame.Visible = false
                    tabLayout.Padding = UDim.new(0, 8)
                    callback(option)
                end)
            end

            Dropdown.MouseButton1Click:Connect(function()
                local isVisible = not DropdownFrame.Visible
                DropdownFrame.Visible = isVisible
                for _, child in pairs(Tab.ScrollingFrame:GetChildren()) do
                    if child:IsA("TextLabel") then
                        for _, subChild in pairs(child:GetChildren()) do
                            if subChild:IsA("ScrollingFrame") and subChild ~= DropdownFrame then
                                subChild.Visible = false
                            end
                        end
                    end
                end
                if isVisible then
                    tabLayout.Padding = UDim.new(0, 130)
                else
                    tabLayout.Padding = UDim.new(0, 8)
                end
            end)
            table.insert(Tab.Elements, Label)
            return Dropdown
        end

        table.insert(Window.Tabs, Tab)
        return Tab
    end

    return Window
end

return Library
