-- Toaster Hub Library (Enhanced Dropdowns and GUI Layout)

local Library = {
    Theme = {
        PrimaryColor = Color3.fromRGB(30, 30, 30),
        SecondaryColor = Color3.fromRGB(50, 50, 50),
        BorderColor = Color3.fromRGB(0, 255, 0),
        TabColor = Color3.fromRGB(40, 40, 40),
        TextColor = Color3.fromRGB(255, 255, 255),
        ButtonColor = Color3.fromRGB(255, 0, 0),
        Font = Enum.Font.SourceSans,
        TextSize = 14,
        BoldFont = Enum.Font.SourceSansBold,
        BoldTextSize = 18,
    },
    Version = "2.7"
}

-- Debug print to confirm library version
print("Toaster Hub Library Version " .. Library.Version .. " loaded")

-- Services
local UserInputService = game:GetService("UserInputService")

-- Utility Functions
local utility = {}

function utility:Create(instance, properties, children)
    local object = Instance.new(instance)
    
    for i, v in pairs(properties or {}) do
        object[i] = v
    end
    
    for i, module in pairs(children or {}) do
        module.Parent = object
    end
    
    return object
end

function utility:Tween(instance, properties, duration)
    local TweenService = game:GetService("TweenService")
    local tweenInfo = TweenInfo.new(duration, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    TweenService:Create(instance, tweenInfo, properties):Play()
end

function utility:Wait()
    game:GetService("RunService").RenderStepped:Wait()
    return true
end

function utility:Pop(object, shrink)
    local clone = object:Clone()
    
    clone.AnchorPoint = Vector2.new(0.5, 0.5)
    clone.Size = clone.Size - UDim2.new(0, shrink, 0, shrink)
    clone.Position = UDim2.new(0.5, 0, 0.5, 0)
    
    clone.Parent = object
    clone:ClearAllChildren()
    
    object.ImageTransparency = 1
    utility:Tween(clone, {Size = object.Size}, 0.2)
    
    spawn(function()
        wait(0.2)
        object.ImageTransparency = 0
        clone:Destroy()
    end)
    
    return clone
end

function utility:Sort(pattern, values)
    local new = {}
    pattern = pattern:lower()
    
    if pattern == "" then
        return values
    end
    
    for i, value in pairs(values) do
        if tostring(value):lower():find(pattern) then
            table.insert(new, value)
        end
    end
    
    return new
end

-- Window Creation
function Library:CreateWindow(name, size, position)
    local Window = {}
    Window.Tabs = {}
    Window.Size = size or UDim2.new(0, 500, 0, 350)
    Window.Position = position or UDim2.new(0.5, -250, 0.5, -175)

    -- ScreenGui
    Window.ScreenGui = utility:Create("ScreenGui", {
        Name = name .. "Gui",
        Parent = game.Players.LocalPlayer.PlayerGui,
        ResetOnSpawn = false,
        ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    })

    -- Main Frame
    Window.Main = utility:Create("ImageLabel", {
        Name = "Main",
        BackgroundTransparency = 1,
        Position = Window.Position,
        Size = Window.Size,
        Image = "rbxassetid://5028857472",
        ImageColor3 = Library.Theme.PrimaryColor,
        ScaleType = Enum.ScaleType.Slice,
        SliceCenter = Rect.new(4, 4, 296, 296),
        Parent = Window.ScreenGui
    }, {
        utility:Create("ImageLabel", {
            Name = "Glow",
            BackgroundTransparency = 1,
            Position = UDim2.new(0, -15, 0, -15),
            Size = UDim2.new(1, 30, 1, 30),
            ZIndex = 0,
            Image = "rbxassetid://5028857084",
            ImageColor3 = Library.Theme.BorderColor,
            ScaleType = Enum.ScaleType.Slice,
            SliceCenter = Rect.new(24, 24, 276, 276)
        }),
        utility:Create("ImageLabel", {
            Name = "Pages",
            BackgroundTransparency = 1,
            ClipsDescendants = true,
            Position = UDim2.new(0, 0, 0, 38),
            Size = UDim2.new(0, 126, 1, -38),
            ZIndex = 3,
            Image = "rbxassetid://5028857472",
            ImageColor3 = Library.Theme.TabColor,
            ScaleType = Enum.ScaleType.Slice,
            SliceCenter = Rect.new(4, 4, 296, 296)
        }, {
            utility:Create("ScrollingFrame", {
                Name = "Pages_Container",
                Active = true,
                BackgroundTransparency = 1,
                Position = UDim2.new(0, 0, 0, 10),
                Size = UDim2.new(1, 0, 1, -20),
                CanvasSize = UDim2.new(0, 0, 0, 0),
                ScrollBarThickness = 3,
                ScrollBarImageColor3 = Library.Theme.SecondaryColor
            }, {
                utility:Create("UIListLayout", {
                    SortOrder = Enum.SortOrder.LayoutOrder,
                    Padding = UDim.new(0, 10)
                })
            })
        }),
        utility:Create("ImageLabel", {
            Name = "TopBar",
            BackgroundTransparency = 1,
            ClipsDescendants = true,
            Size = UDim2.new(1, 0, 0, 38),
            ZIndex = 5,
            Image = "rbxassetid://5028857472",
            ImageColor3 = Library.Theme.SecondaryColor,
            ScaleType = Enum.ScaleType.Slice,
            SliceCenter = Rect.new(4, 4, 296, 296)
        }, {
            utility:Create("TextLabel", {
                Name = "Title",
                AnchorPoint = Vector2.new(0, 0.5),
                BackgroundTransparency = 1,
                Position = UDim2.new(0, 12, 0, 19),
                Size = UDim2.new(1, -46, 0, 16),
                ZIndex = 5,
                Font = Library.Theme.BoldFont,
                Text = name,
                TextColor3 = Library.Theme.TextColor,
                TextSize = Library.Theme.BoldTextSize,
                TextXAlignment = Enum.TextXAlignment.Left
            })
        })
    })

    -- Create Minimize and Close Buttons
    Window.Main.TopBar.MinimizeButton = utility:Create("TextButton", {
        Size = UDim2.new(0, 30, 0, 30),
        Position = UDim2.new(1, -60, 0, 0),
        BackgroundColor3 = Library.Theme.ButtonColor,
        Text = "-",
        TextColor3 = Library.Theme.TextColor,
        Font = Library.Theme.BoldFont,
        TextSize = Library.Theme.BoldTextSize,
        ZIndex = 6,
        Parent = Window.Main.TopBar
    })

    Window.Main.TopBar.CloseButton = utility:Create("TextButton", {
        Size = UDim2.new(0, 30, 0, 30),
        Position = UDim2.new(1, -30, 0, 0),
        BackgroundColor3 = Library.Theme.ButtonColor,
        Text = "X",
        TextColor3 = Library.Theme.TextColor,
        Font = Library.Theme.BoldFont,
        TextSize = Library.Theme.BoldTextSize,
        ZIndex = 6,
        Parent = Window.Main.TopBar
    })

    -- Dragging Logic
    local dragging, dragStart, startPos
    Window.Main.TopBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = Window.Main.Position
        end
    end)
    UserInputService.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            local delta = input.Position - dragStart
            Window.Main.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
    UserInputService.InputEnded:Connect(function()
        if dragging then
            dragging = false
        end
    end)

    -- Minimize Logic
    Window.Main.TopBar.MinimizeButton.MouseButton1Click:Connect(function()
        Window.Main.Visible = false
        local restoreButton = utility:Create("TextButton", {
            Size = UDim2.new(0, 120, 0, 30),
            Position = UDim2.new(0.5, -60, 0, 10),
            BackgroundColor3 = Library.Theme.PrimaryColor,
            BorderColor3 = Library.Theme.BorderColor,
            Text = "ðŸ”¼ Restore GUI",
            TextColor3 = Library.Theme.TextColor,
            Font = Library.Theme.BoldFont,
            TextSize = 16,
            ZIndex = 99,
            Parent = Window.ScreenGui
        })

        restoreButton.MouseButton1Click:Connect(function()
            Window.Main.Visible = true
            restoreButton:Destroy()
        end)
    end)

    -- Close Logic
    Window.Main.TopBar.CloseButton.MouseButton1Click:Connect(function()
        Window.ScreenGui:Destroy()
    end)

    function Window:AddTab(name)
        local Tab = {}
        Tab.Name = name
        Tab.Elements = {}

        -- Tab Button
        Tab.Button = utility:Create("TextButton", {
            Name = name,
            Parent = Window.Main.Pages.Pages_Container,
            BackgroundTransparency = 1,
            BorderSizePixel = 0,
            Size = UDim2.new(1, 0, 0, 26),
            ZIndex = 3,
            AutoButtonColor = false,
            Font = Library.Theme.Font,
            Text = "",
            TextSize = 14
        }, {
            utility:Create("ImageLabel", {
                Name = "Background",
                BackgroundTransparency = 1,
                Size = UDim2.new(1, 0, 1, 0),
                ZIndex = 2,
                Image = "rbxassetid://5028857472",
                ImageColor3 = Color3.new(0, 0, 0),
                ImageTransparency = 1,
                ScaleType = Enum.ScaleType.Slice,
                SliceCenter = Rect.new(2, 2, 298, 298)
            }),
            utility:Create("TextLabel", {
                Name = "Title",
                AnchorPoint = Vector2.new(0, 0.5),
                BackgroundTransparency = 1,
                Position = UDim2.new(0, 40, 0.5, 0),
                Size = UDim2.new(0, 76, 1, 0),
                ZIndex = 3,
                Font = Library.Theme.Font,
                Text = name,
                TextColor3 = Library.Theme.TextColor,
                TextSize = 12,
                TextTransparency = 0.65,
                TextXAlignment = Enum.TextXAlignment.Left
            }),
            utility:Create("ImageLabel", {
                Name = "Icon",
                AnchorPoint = Vector2.new(0, 0.5),
                BackgroundTransparency = 1,
                Position = UDim2.new(0, 12, 0.5, 0),
                Size = UDim2.new(0, 16, 0, 16),
                ZIndex = 3,
                Image = "rbxassetid://5012539403",
                ImageColor3 = Library.Theme.TextColor,
                ImageTransparency = 0.64
            })
        })

        -- Tab Frame
        Tab.Frame = utility:Create("ScrollingFrame", {
            Name = name,
            Parent = Window.Main,
            Active = true,
            BackgroundTransparency = 1,
            BorderSizePixel = 0,
            Position = UDim2.new(0, 134, 0, 46),
            Size = UDim2.new(1, -142, 1, -56),
            CanvasSize = UDim2.new(0, 0, 0, 0),
            ScrollBarThickness = 3,
            ScrollBarImageColor3 = Library.Theme.SecondaryColor,
            Visible = false
        }, {
            utility:Create("UIListLayout", {
                SortOrder = Enum.SortOrder.LayoutOrder,
                Padding = UDim.new(0, 10)
            })
        })

        -- Update CanvasSize when elements are added
        Tab.Frame.UIListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
            Tab.Frame.CanvasSize = UDim2.new(0, 0, 0, Tab.Frame.UIListLayout.AbsoluteContentSize.Y)
        end)

        -- Tab Switching
        Tab.Button.MouseButton1Click:Connect(function()
            for _, tab in pairs(Window.Tabs) do
                tab.Frame.Visible = false
                tab.Button.Title.TextTransparency = 0.65
                tab.Button.Title.Font = Library.Theme.Font
                if tab.Button:FindFirstChild("Icon") then
                    tab.Button.Icon.ImageTransparency = 0.65
                end
                if tab.Button:FindFirstChild("Background") then
                    utility:Tween(tab.Button.Background, {ImageTransparency = 1}, 0.2)
                end
                -- Hide sections with animation
                for _, section in pairs(tab.Sections or {}) do
                    utility:Tween(section.Frame, {ImageTransparency = 1}, 0.1)
                    utility:Tween(section.ScrollingFrame.Title, {TextTransparency = 1}, 0.1)
                end
            end
            Tab.Frame.Visible = true
            Tab.Button.Title.TextTransparency = 0
            Tab.Button.Title.Font = Library.Theme.BoldFont
            if Tab.Button:FindFirstChild("Icon") then
                Tab.Button.Icon.ImageTransparency = 0
            end
            if Tab.Button:FindFirstChild("Background") then
                utility:Tween(Tab.Button.Background, {ImageTransparency = 0.7}, 0.2)
            end
            -- Show sections with animation
            for _, section in pairs(Tab.Sections or {}) do
                utility:Tween(section.Frame, {ImageTransparency = 0}, 0.1)
                utility:Tween(section.ScrollingFrame.Title, {TextTransparency = 0}, 0.1)
            end
        end)

        Tab.Sections = {}

        function Tab:AddSection(title)
            local Section = {}
            Section.Elements = {}

            Section.Frame = utility:Create("ImageLabel", {
                Name = title,
                Parent = Tab.Frame,
                BackgroundTransparency = 1,
                Size = UDim2.new(1, -10, 0, 28),
                ZIndex = 2,
                Image = "rbxassetid://5028857472",
                ImageColor3 = Library.Theme.SecondaryColor,
                ScaleType = Enum.ScaleType.Slice,
                SliceCenter = Rect.new(4, 4, 296, 296),
                ClipsDescendants = true
            }, {
                utility:Create("Frame", {
                    Name = "Container",
                    Active = true,
                    BackgroundTransparency = 1,
                    BorderSizePixel = 0,
                    Position = UDim2.new(0, 8, 0, 8),
                    Size = UDim2.new(1, -16, 1, -16)
                }, {
                    utility:Create("TextLabel", {
                        Name = "Title",
                        BackgroundTransparency = 1,
                        Size = UDim2.new(1, 0, 0, 20),
                        ZIndex = 3,
                        Font = Library.Theme.BoldFont,
                        Text = title,
                        TextColor3 = Library.Theme.TextColor,
                        TextSize = 14,
                        TextTransparency = 1, -- Initially transparent
                        TextXAlignment = Enum.TextXAlignment.Left
                    }),
                    utility:Create("UIListLayout", {
                        SortOrder = Enum.SortOrder.LayoutOrder,
                        Padding = UDim.new(0, 8)
                    })
                })
            })

            Section.ScrollingFrame = Section.Frame.Container

            function Section:AddLabel(text)
                local Label = utility:Create("TextLabel", {
                    Name = "Label",
                    Parent = Section.ScrollingFrame,
                    BackgroundTransparency = 1,
                    Size = UDim2.new(1, 0, 0, 35),
                    ZIndex = 3,
                    Font = Library.Theme.Font,
                    Text = text,
                    TextColor3 = Library.Theme.TextColor,
                    TextSize = Library.Theme.TextSize,
                    TextXAlignment = Enum.TextXAlignment.Left
                })
                table.insert(Section.Elements, Label)
                return Label
            end

            function Section:AddButton(text, callback)
                local Button = utility:Create("TextButton", {
                    Name = "Button",
                    Parent = Section.ScrollingFrame,
                    BackgroundTransparency = 1,
                    BorderSizePixel = 0,
                    Size = UDim2.new(1, 0, 0, 35),
                    ZIndex = 3,
                    Image = "rbxassetid://5028857472",
                    ImageColor3 = Library.Theme.SecondaryColor,
                    ScaleType = Enum.ScaleType.Slice,
                    SliceCenter = Rect.new(2, 2, 298, 298)
                }, {
                    utility:Create("TextLabel", {
                        Name = "Title",
                        BackgroundTransparency = 1,
                        Size = UDim2.new(1, 0, 1, 0),
                        ZIndex = 4,
                        Font = Library.Theme.Font,
                        Text = text,
                        TextColor3 = Library.Theme.TextColor,
                        TextSize = Library.Theme.TextSize
                    })
                })

                table.insert(Section.Elements, Button)

                Button.MouseButton1Click:Connect(function()
                    utility:Pop(Button, 10)
                    callback()
                end)

                return Button
            end

            function Section:AddToggle(text, default, callback)
                local Toggle = utility:Create("TextButton", {
                    Name = "Toggle",
                    Parent = Section.ScrollingFrame,
                    BackgroundTransparency = 1,
                    BorderSizePixel = 0,
                    Size = UDim2.new(1, 0, 0, 35),
                    ZIndex = 3,
                    Image = "rbxassetid://5028857472",
                    ImageColor3 = Library.Theme.SecondaryColor,
                    ScaleType = Enum.ScaleType.Slice,
                    SliceCenter = Rect.new(2, 2, 298, 298)
                }, {
                    utility:Create("TextLabel", {
                        Name = "Title",
                        AnchorPoint = Vector2.new(0, 0.5),
                        BackgroundTransparency = 1,
                        Position = UDim2.new(0, 10, 0.5, 0),
                        Size = UDim2.new(0.5, 0, 1, 0),
                        ZIndex = 4,
                        Font = Library.Theme.Font,
                        Text = text,
                        TextColor3 = Library.Theme.TextColor,
                        TextSize = Library.Theme.TextSize,
                        TextXAlignment = Enum.TextXAlignment.Left
                    }),
                    utility:Create("ImageLabel", {
                        Name = "Button",
                        BackgroundTransparency = 1,
                        BorderSizePixel = 0,
                        Position = UDim2.new(1, -50, 0.5, -8),
                        Size = UDim2.new(0, 40, 0, 16),
                        ZIndex = 3,
                        Image = "rbxassetid://5028857472",
                        ImageColor3 = Library.Theme.PrimaryColor,
                        ScaleType = Enum.ScaleType.Slice,
                        SliceCenter = Rect.new(2, 2, 298, 298)
                    }, {
                        utility:Create("ImageLabel", {
                            Name = "Frame",
                            BackgroundTransparency = 1,
                            Position = UDim2.new(0, 2, 0.5, -6),
                            Size = UDim2.new(1, -22, 1, -4),
                            ZIndex = 4,
                            Image = "rbxassetid://5028857472",
                            ImageColor3 = Library.Theme.TextColor,
                            ScaleType = Enum.ScaleType.Slice,
                            SliceCenter = Rect.new(2, 2, 298, 298)
                        })
                    })
                })

                table.insert(Section.Elements, Toggle)

                local state = default
                local position = {
                    On = UDim2.new(0, 20, 0.5, -6),
                    Off = UDim2.new(0, 2, 0.5, -6)
                }
                local frame = Toggle.Button.Frame
                Toggle.Button.Title.Text = state and (text .. ": On") or (text .. ": Off")
                frame.Position = state and position.On or position.Off

                Toggle.MouseButton1Click:Connect(function()
                    state = not state
                    Toggle.Button.Title.Text = state and (text .. ": On") or (text .. ": Off")
                    utility:Tween(frame, {Position = state and position.On or position.Off}, 0.2)
                    callback(state)
                end)

                return Toggle
            end

            function Section:AddTextbox(text, default, callback)
                local Textbox = utility:Create("ImageButton", {
                    Name = "Textbox",
                    Parent = Section.ScrollingFrame,
                    BackgroundTransparency = 1,
                    BorderSizePixel = 0,
                    Size = UDim2.new(1, 0, 0, 35),
                    ZIndex = 3,
                    Image = "rbxassetid://5028857472",
                    ImageColor3 = Library.Theme.SecondaryColor,
                    ScaleType = Enum.ScaleType.Slice,
                    SliceCenter = Rect.new(2, 2, 298, 298)
                }, {
                    utility:Create("TextLabel", {
                        Name = "Title",
                        AnchorPoint = Vector2.new(0, 0.5),
                        BackgroundTransparency = 1,
                        Position = UDim2.new(0, 10, 0.5, 0),
                        Size = UDim2.new(0.5, 0, 1, 0),
                        ZIndex = 4,
                        Font = Library.Theme.Font,
                        Text = text,
                        TextColor3 = Library.Theme.TextColor,
                        TextSize = Library.Theme.TextSize,
                        TextXAlignment = Enum.TextXAlignment.Left
                    }),
                    utility:Create("ImageLabel", {
                        Name = "Button",
                        BackgroundTransparency = 1,
                        Position = UDim2.new(1, -110, 0.5, -8),
                        Size = UDim2.new(0, 100, 0, 16),
                        ZIndex = 3,
                        Image = "rbxassetid://5028857472",
                        ImageColor3 = Library.Theme.PrimaryColor,
                        ScaleType = Enum.ScaleType.Slice,
                        SliceCenter = Rect.new(2, 2, 298, 298)
                    }, {
                        utility:Create("TextBox", {
                            Name = "Textbox",
                            BackgroundTransparency = 1,
                            TextTruncate = Enum.TextTruncate.AtEnd,
                            Position = UDim2.new(0, 5, 0, 0),
                            Size = UDim2.new(1, -10, 1, 0),
                            ZIndex = 4,
                            Font = Library.Theme.BoldFont,
                            Text = default or "",
                            TextColor3 = Library.Theme.TextColor,
                            TextSize = 12,
                            TextXAlignment = Enum.TextXAlignment.Center
                        })
                    })
                })

                table.insert(Section.Elements, Textbox)

                local button = Textbox.Button
                local input = button.Textbox

                Textbox.MouseButton1Click:Connect(function()
                    if Textbox.Button.Size ~= UDim2.new(0, 100, 0, 16) then
                        return
                    end
                    utility:Tween(Textbox.Button, {
                        Size = UDim2.new(0, 200, 0, 16),
                        Position = UDim2.new(1, -210, 0.5, -8)
                    }, 0.2)
                    wait()
                    input.TextXAlignment = Enum.TextXAlignment.Left
                    input:CaptureFocus()
                end)

                input.FocusLost:Connect(function()
                    input.TextXAlignment = Enum.TextXAlignment.Center
                    utility:Tween(Textbox.Button, {
                        Size = UDim2.new(0, 100, 0, 16),
                        Position = UDim2.new(1, -110, 0.5, -8)
                    }, 0.2)
                    callback(input.Text)
                end)

                return Textbox
            end

            function Section:AddDropdown(text, options, default, callback)
                local Dropdown = utility:Create("Frame", {
                    Name = "Dropdown",
                    Parent = Section.ScrollingFrame,
                    BackgroundTransparency = 1,
                    Size = UDim2.new(1, 0, 0, 35),
                    ClipsDescendants = true,
                    ZIndex = 3
                }, {
                    utility:Create("UIListLayout", {
                        SortOrder = Enum.SortOrder.LayoutOrder,
                        Padding = UDim.new(0, 4)
                    }),
                    utility:Create("ImageLabel", {
                        Name = "Search",
                        BackgroundTransparency = 1,
                        BorderSizePixel = 0,
                        Size = UDim2.new(1, 0, 0, 35),
                        ZIndex = 4,
                        Image = "rbxassetid://5028857472",
                        ImageColor3 = Library.Theme.SecondaryColor,
                        ScaleType = Enum.ScaleType.Slice,
                        SliceCenter = Rect.new(2, 2, 298, 298)
                    }, {
                        utility:Create("TextBox", {
                            Name = "TextBox",
                            AnchorPoint = Vector2.new(0, 0.5),
                            BackgroundTransparency = 1,
                            TextTruncate = Enum.TextTruncate.AtEnd,
                            Position = UDim2.new(0, 10, 0.5, 0),
                            Size = UDim2.new(1, -42, 1, 0),
                            ZIndex = 5,
                            Font = Library.Theme.Font,
                            Text = default or text,
                            TextColor3 = Library.Theme.TextColor,
                            TextSize = Library.Theme.TextSize,
                            TextXAlignment = Enum.TextXAlignment.Left,
                            PlaceholderText = text,
                            PlaceholderColor3 = Library.Theme.TextColor
                        }),
                        utility:Create("ImageButton", {
                            Name = "Button",
                            BackgroundTransparency = 1,
                            BorderSizePixel = 0,
                            Position = UDim2.new(1, -28, 0.5, -9),
                            Size = UDim2.new(0, 18, 0, 18),
                            ZIndex = 5,
                            Image = "rbxassetid://5012539403",
                            ImageColor3 = Library.Theme.TextColor,
                            SliceCenter = Rect.new(2, 2, 298, 298)
                        })
                    }),
                    utility:Create("ImageLabel", {
                        Name = "List",
                        BackgroundTransparency = 1,
                        BorderSizePixel = 0,
                        Size = UDim2.new(1, 0, 1, -39),
                        ZIndex = 4,
                        Image = "rbxassetid://5028857472",
                        ImageColor3 = Library.Theme.PrimaryColor,
                        ScaleType = Enum.ScaleType.Slice,
                        SliceCenter = Rect.new(2, 2, 298, 298)
                    }, {
                        utility:Create("ScrollingFrame", {
                            Name = "Frame",
                            Active = true,
                            BackgroundTransparency = 1,
                            BorderSizePixel = 0,
                            Position = UDim2.new(0, 4, 0, 4),
                            Size = UDim2.new(1, -8, 1, -8),
                            CanvasPosition = Vector2.new(0, 0),
                            CanvasSize = UDim2.new(0, 0, 0, 0),
                            ZIndex = 5,
                            ScrollBarThickness = 3,
                            ScrollBarImageColor3 = Library.Theme.SecondaryColor
                        }, {
                            utility:Create("UIListLayout", {
                                SortOrder = Enum.SortOrder.LayoutOrder,
                                Padding = UDim.new(0, 4)
                            })
                        })
                    })
                })

                table.insert(Section.Elements, Dropdown)

                local search = Dropdown.Search
                local focused = false
                local list = options or {}

                search.Button.MouseButton1Click:Connect(function()
                    utility:Pop(search, 10)
                    if search.Button.Rotation == 0 then
                        local currentList = utility:Sort(search.TextBox.Text, list)
                        currentList = #currentList ~= 0 and currentList or nil
                        local entries = math.clamp(#currentList, 0, 3)
                        utility:Tween(Dropdown, {Size = UDim2.new(1, 0, 0, (entries == 0 and 35) or entries * 39 + 39)}, 0.3)
                        utility:Tween(search.Button, {Rotation = 180}, 0.3)

                        for i, button in pairs(Dropdown.List.Frame:GetChildren()) do
                            if button:IsA("ImageButton") then
                                button:Destroy()
                            end
                        end

                        for i, value in pairs(currentList or {}) do
                            local button = utility:Create("ImageButton", {
                                Parent = Dropdown.List.Frame,
                                BackgroundTransparency = 1,
                                BorderSizePixel = 0,
                                Size = UDim2.new(1, 0, 0, 35),
                                ZIndex = 6,
                                Image = "rbxassetid://5028857472",
                                ImageColor3 = Library.Theme.SecondaryColor,
                                ScaleType = Enum.ScaleType.Slice,
                                SliceCenter = Rect.new(2, 2, 298, 298)
                            }, {
                                utility:Create("TextLabel", {
                                    BackgroundTransparency = 1,
                                    Position = UDim2.new(0, 10, 0, 0),
                                    Size = UDim2.new(1, -10, 1, 0),
                                    ZIndex = 7,
                                    Font = Library.Theme.Font,
                                    Text = tostring(value),
                                    TextColor3 = Library.Theme.TextColor,
                                    TextSize = Library.Theme.TextSize,
                                    TextXAlignment = Enum.TextXAlignment.Left,
                                    TextTransparency = 0.1
                                })
                            })

                            button.MouseButton1Click:Connect(function()
                                utility:Pop(button, 10)
                                search.TextBox.Text = tostring(value)
                                callback(value)
                                utility:Tween(Dropdown, {Size = UDim2.new(1, 0, 0, 35)}, 0.3)
                                utility:Tween(search.Button, {Rotation = 0}, 0.3)
                            end)
                        end

                        Dropdown.List.Frame.CanvasSize = UDim2.new(0, 0, 0, (#currentList * 39) - 4)
                        Dropdown.List.Frame.ScrollBarImageTransparency = #currentList > 3 and 0 or 1
                    else
                        utility:Tween(Dropdown, {Size = UDim2.new(1, 0, 0, 35)}, 0.3)
                        utility:Tween(search.Button, {Rotation = 0}, 0.3)
                    end
                end)

                search.TextBox.Focused:Connect(function()
                    focused = true
                    if search.Button.Rotation == 0 then
                        local currentList = utility:Sort(search.TextBox.Text, list)
                        currentList = #currentList ~= 0 and currentList or nil
                        local entries = math.clamp(#currentList, 0, 3)
                        utility:Tween(Dropdown, {Size = UDim2.new(1, 0, 0, (entries == 0 and 35) or entries * 39 + 39)}, 0.3)
                        utility:Tween(search.Button, {Rotation = 180}, 0.3)

                        for i, button in pairs(Dropdown.List.Frame:GetChildren()) do
                            if button:IsA("ImageButton") then
                                button:Destroy()
                            end
                        end

                        for i, value in pairs(currentList or {}) do
                            local button = utility:Create("ImageButton", {
                                Parent = Dropdown.List.Frame,
                                BackgroundTransparency = 1,
                                BorderSizePixel = 0,
                                Size = UDim2.new(1, 0, 0, 35),
                                ZIndex = 6,
                                Image = "rbxassetid://5028857472",
                                ImageColor3 = Library.Theme.SecondaryColor,
                                ScaleType = Enum.ScaleType.Slice,
                                SliceCenter = Rect.new(2, 2, 298, 298)
                            }, {
                                utility:Create("TextLabel", {
                                    BackgroundTransparency = 1,
                                    Position = UDim2.new(0, 10, 0, 0),
                                    Size = UDim2.new(1, -10, 1, 0),
                                    ZIndex = 7,
                                    Font = Library.Theme.Font,
                                    Text = tostring(value),
                                    TextColor3 = Library.Theme.TextColor,
                                    TextSize = Library.Theme.TextSize,
                                    TextXAlignment = Enum.TextXAlignment.Left,
                                    TextTransparency = 0.1
                                })
                            })

                            button.MouseButton1Click:Connect(function()
                                utility:Pop(button, 10)
                                search.TextBox.Text = tostring(value)
                                callback(value)
                                utility:Tween(Dropdown, {Size = UDim2.new(1, 0, 0, 35)}, 0.3)
                                utility:Tween(search.Button, {Rotation = 0}, 0.3)
                            end)
                        end

                        Dropdown.List.Frame.CanvasSize = UDim2.new(0, 0, 0, (#currentList * 39) - 4)
                        Dropdown.List.Frame.ScrollBarImageTransparency = #currentList > 3 and 0 or 1
                    end
                end)

                search.TextBox.FocusLost:Connect(function()
                    focused = false
                end)

                search.TextBox:GetPropertyChangedSignal("Text"):Connect(function()
                    if focused then
                        local currentList = utility:Sort(search.TextBox.Text, list)
                        currentList = #currentList ~= 0 and currentList or nil
                        local entries = math.clamp(#currentList, 0, 3)
                        utility:Tween(Dropdown, {Size = UDim2.new(1, 0, 0, (entries == 0 and 35) or entries * 39 + 39)}, 0.3)

                        for i, button in pairs(Dropdown.List.Frame:GetChildren()) do
                            if button:IsA("ImageButton") then
                                button:Destroy()
                            end
                        end

                        for i, value in pairs(currentList or {}) do
                            local button = utility:Create("ImageButton", {
                                Parent = Dropdown.List.Frame,
                                BackgroundTransparency = 1,
                                BorderSizePixel = 0,
                                Size = UDim2.new(1, 0, 0, 35),
                                ZIndex = 6,
                                Image = "rbxassetid://5028857472",
                                ImageColor3 = Library.Theme.SecondaryColor,
                                ScaleType = Enum.ScaleType.Slice,
                                SliceCenter = Rect.new(2, 2, 298, 298)
                            }, {
                                utility:Create("TextLabel", {
                                    BackgroundTransparency = 1,
                                    Position = UDim2.new(0, 10, 0, 0),
                                    Size = UDim2.new(1, -10, 1, 0),
                                    ZIndex = 7,
                                    Font = Library.Theme.Font,
                                    Text = tostring(value),
                                    TextColor3 = Library.Theme.TextColor,
                                    TextSize = Library.Theme.TextSize,
                                    TextXAlignment = Enum.TextXAlignment.Left,
                                    TextTransparency = 0.1
                                })
                            })

                            button.MouseButton1Click:Connect(function()
                                utility:Pop(button, 10)
                                search.TextBox.Text = tostring(value)
                                callback(value)
                                utility:Tween(Dropdown, {Size = UDim2.new(1, 0, 0, 35)}, 0.3)
                                utility:Tween(search.Button, {Rotation = 0}, 0.3)
                            end)
                        end

                        Dropdown.List.Frame.CanvasSize = UDim2.new(0, 0, 0, (#currentList * 39) - 4)
                        Dropdown.List.Frame.ScrollBarImageTransparency = #currentList > 3 and 0 or 1
                    end
                end)

                return Dropdown
            end

            table.insert(Tab.Sections, Section)
            return Section
        end

        table.insert(Window.Tabs, Tab)
        return Tab
    end

    return Window
end

return Library
